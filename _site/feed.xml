<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hu's Space !</title>
    <description>This is personnel website of HuTianyun</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 01 Jun 2018 11:32:15 +0800</pubDate>
    <lastBuildDate>Fri, 01 Jun 2018 11:32:15 +0800</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title> 复合材料层合板计算 </title>
        <description>&lt;h1 id=&quot;introduction-复合材料层合板在一定载荷下的应力应变分布的计算选用强度准则校测层合板失效给出失效历史&quot;&gt;Introduction 　复合材料层合板在一定载荷下的应力应变分布的计算，选用强度准则校测层合板失效，给出失效历史．&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;CN&lt;/th&gt;
      &lt;th&gt;ENG&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;复合材料层合板计算&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/Eacaen/CLT-material-properties&quot; title=&quot;CLT&quot;&gt;Composite Material Calculation with CLT&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#composite-material-calculation-with-clt&quot;&gt;Introduction&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;read the program introduction for more details &lt;/code&gt; &lt;a href=&quot;/doc/pro_introduction.pdf&quot;&gt;Here&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#running-requirements&quot;&gt;Running requirements&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#license&quot;&gt;License&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img align=&quot;right&quot; width=&quot;400&quot; height=&quot;300&quot; src=&quot;/post_img/CLT-fig/Composite_3d.png&quot; data-canonical-src=&quot;/post_img/CLT-fig/Composite_3d.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;project-code-for-mechanics-of-composite-structure-in-npupartly-finish&quot;&gt;Project code for Mechanics of Composite Structure IN NPU,PARTLY FINISH.&lt;/h4&gt;
&lt;h4 id=&quot;all-right-reserved&quot;&gt;ALL RIGHT RESERVED&lt;/h4&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;project-goals&quot;&gt;Project goals:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Use the fibre and matrix or given data to define the composite lamina and then layup the laminate.&lt;/li&gt;
  &lt;li&gt;Use the &lt;em&gt;Classical Lamination Theory&lt;/em&gt; to  calculate the stress&amp;amp;strain distribution in each layer.&lt;/li&gt;
  &lt;li&gt;Choose suitable &lt;em&gt;Failure Criteria&lt;/em&gt; to check the strength of laminate at given load.&lt;/li&gt;
  &lt;li&gt;Show accurate calculate information of results, display /post_img/CLT-figures of  stress&amp;amp;strain distribution; show the failure steps of chosen layer.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;data-flow-of-the-project&quot;&gt;Data flow of the Project&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/post_img/CLT-fig/dataflow.png&quot; data-canonical-src=&quot;/post_img/CLT-fig/dataflow.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;task-achieved&quot;&gt;Task achieved:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;[x] Use CLT to calculate  stresses and strains distribution in lamina &amp;amp; laminate in local and global coordinate systems&lt;/li&gt;
  &lt;li&gt;[x] Elastic modulus  calculate  for  lamina with [mixture of law , VDI2014 , Chamis model …..]&lt;/li&gt;
  &lt;li&gt;[x] Global elastic modulus  calculate  for  &lt;strong&gt;laminate&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;[x] Failure criteria [Tsai-Wu, Tsai-Hill, Hoffman, Max stress&amp;amp;strain …]&lt;/li&gt;
  &lt;li&gt;[x] Display the /post_img/CLT-figures and report accurate results&lt;/li&gt;
  &lt;li&gt;[x] Puck failure criteria&lt;/li&gt;
  &lt;li&gt;[ ] Thermal &amp;amp; moisture effects on CLT calculations&lt;/li&gt;
  &lt;li&gt;[ ] Database for Fibre and Matrix, laminate materials&lt;/li&gt;
  &lt;li&gt;[ ] …&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;brief-intro&quot;&gt;Brief intro&lt;/h2&gt;
&lt;h3 id=&quot;coordinate-system&quot;&gt;Coordinate System&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;xy is the Global System for &lt;strong&gt;laminate&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;12 is the Local system for &lt;strong&gt;lamina&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/post_img/CLT-fig/laminate_COS.png&quot; data-canonical-src=&quot;/post_img/CLT-fig/laminate_COS.png&quot; /&gt;&lt;img src=&quot;/post_img/CLT-fig/lammmm.png&quot; data-canonical-src=&quot;png/lammmm.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;composite-material-calculation-with-clt&quot;&gt;Composite Material Calculation with CLT&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The main package is a Python composite materials calculation package.
The calculation of laminate stress, strain and failure Criterion based on the Classical Lamination Theory (&lt;a href=&quot;https://en.wikipedia.org/wiki/Composite_laminates&quot;&gt;CLT&lt;/a&gt;).&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;You can define the lamina’s fibre and matrix’s parameters like the Elastic moduli
  &lt;img src=&quot;http://latex.codecogs.com/gif.latex?E_{1},E_{2}&quot; alt=&quot;&quot; /&gt;,
   Shear moduli &lt;img src=&quot;http://latex.codecogs.com/gif.latex?G&quot; alt=&quot;&quot; /&gt; and strength, then  in the next step, you can define lamina’s layer angle and thickness directly or combined by fibre/matrix.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Use the &lt;strong&gt;&lt;em&gt;Laminate class&lt;/em&gt;&lt;/strong&gt; to get the matrix such as &lt;img src=&quot;http://latex.codecogs.com/gif.latex?A,B,D,Q,\\bar{Q}&quot; alt=&quot;A,B,D,Q&quot; /&gt;.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Use the &lt;strong&gt;&lt;em&gt;Load class&lt;/em&gt;&lt;/strong&gt; and load force and moment to the laminate to calculate the stress &lt;img src=&quot;http://latex.codecogs.com/gif.latex?\\sigma&quot; alt=&quot;&quot; /&gt; and stain &lt;img src=&quot;http://latex.codecogs.com/gif.latex?\\epsilon&quot; alt=&quot;&quot; /&gt; of each lamina.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Use the &lt;strong&gt;&lt;em&gt;Failure_Cirterion class&lt;/em&gt;&lt;/strong&gt; and you can choose different theories to check witch lamina failure or not.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;em&gt;laminate_Tools.py&lt;/em&gt; can help to plot the stress and strain distribution in the laminate in the COS(xy or 12), print the results in &lt;em&gt;Excel&lt;/em&gt; formate  and save it in &lt;em&gt;Excel&lt;/em&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;400&quot; height=&quot;300&quot; src=&quot;/post_img/CLT-fig/strain_dis1.png&quot; data-canonical-src=&quot;/post_img/CLT-fig/strain_dis1.png&quot; /&gt;&lt;img width=&quot;400&quot; height=&quot;300&quot; src=&quot;/post_img/CLT-fig/stress_dis.png&quot; data-canonical-src=&quot;/post_img/CLT-fig/stress_dis.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;400&quot; height=&quot;300&quot; src=&quot;/post_img/CLT-fig/strain_dis.png&quot; data-canonical-src=&quot;/post_img/CLT-fig/strain_dis.png&quot; /&gt;&lt;img width=&quot;400&quot; height=&quot;300&quot; src=&quot;/post_img/CLT-fig/result.png&quot; data-canonical-src=&quot;/post_img/CLT-fig/result.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;run-failure-analysis&quot;&gt;Run failure analysis&lt;/h2&gt;
&lt;p&gt;Run  failure analysis by adding load step by step , use &lt;em&gt;laminate_step_failure.py&lt;/em&gt; can  plot the Load Factor vs  the strain development of the chosen laminate, at the same time, it can mark the First Ply Failure and Last Ply Failure.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It may take some more time to run the process&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img width=&quot;400&quot; height=&quot;300&quot; src=&quot;/post_img/CLT-fig/failstep.png&quot; data-canonical-src=&quot;/post_img/CLT-fig/failstep.png&quot; /&gt;&lt;img width=&quot;400&quot; height=&quot;300&quot; src=&quot;/post_img/CLT-fig/failureStep.png&quot; data-canonical-src=&quot;/post_img/CLT-fig/failureStep.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;running-requirements&quot;&gt;Running requirements&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Python &amp;gt; v2.7
Numpy
Scipy
Sympy
matplotlib
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Copy the source files in the local directory and add the PATH in the system or copy the files to the Python’s “site-packages” folder.&lt;br /&gt;
Copy the source file in you own file and develop the new function by yourself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;license&quot;&gt;License&lt;/h3&gt;
&lt;h4 id=&quot;project-code-for-mechanics-of-composite-structure-in-npupartly-finish-1&quot;&gt;Project code for Mechanics of Composite Structure IN NPU,PARTLY FINISH.&lt;/h4&gt;
&lt;h4 id=&quot;all-right-reserve&quot;&gt;ALL RIGHT RESERVE&lt;/h4&gt;
&lt;hr /&gt;

</description>
        <pubDate>Sun, 20 May 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/python/2018/05/20/CLT-calculation.html</link>
        <guid isPermaLink="true">http://localhost:4000/python/2018/05/20/CLT-calculation.html</guid>
        
        
        <category>Python</category>
        
      </item>
    
      <item>
        <title> ABAQUS 运动相机防水壳密封页片 </title>
        <description>&lt;p&gt;&lt;strong&gt;仅供参考交流，对计算结果的精确性不负任何责任&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;abaqus运动相机防水壳密封页片&quot;&gt;ABAQUS　运动相机防水壳密封页片&lt;/h1&gt;

&lt;p&gt;淘宝上买了运动相机防水壳，用过的都知道运动相机防水壳采用是确实一种十分暴力的方法，借助页片变形的力直接将密封圈固定在壳体上，但是这样的方法完全依赖页片变形，我在淘宝上先后购买了两款不同页片形状的壳子，第一款壳子的页片已连续损坏两次，都是由于在开闭壳子时圆形边角开裂而造成应力集中，而购买的第二款新壳子就直接去掉了原有的边角，并将密封圈在密封时嵌入壳体．就这个改进我感到还是满意的，改进原因也十分简单．借机复习一下ＡＢＡＱＵＳ使用，看看到底改进了多少．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_img/ABAQUS-WPBlade/crack.jpg&quot; alt=&quot;two-cc&quot; title=&quot;two&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;简化模型和材料参数&quot;&gt;简化模型和材料参数&lt;/h2&gt;
&lt;p&gt;原始曲面模型比较复杂，塑料材料也不好确定，但是我只是要看到大概的趋势，所以对模型进行了简化，材料也只给定了弹性模量和泊松比．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_img/ABAQUS-WPBlade/simple-model1.png&quot; alt=&quot;simple-model&quot; title=&quot;simple-model1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;简化受力和边界条件&quot;&gt;简化受力和边界条件&lt;/h2&gt;
&lt;p&gt;固定限制页片底部Ｙ方向和边界处Ｘ方向的位移，给定页片爪子处强制的位移．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_img/ABAQUS-WPBlade/simple-model2.png&quot; alt=&quot;simple-model&quot; title=&quot;simple-model2&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;结果分析&quot;&gt;结果分析&lt;/h2&gt;

&lt;h3 id=&quot;款式一-完整页片&quot;&gt;[款式一] 完整页片&lt;/h3&gt;
&lt;p&gt;在完整的款式一页片处，应力集中于圆孔两侧，最大位移位于爪子处．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_img/ABAQUS-WPBlade/0/wholes1.png&quot; alt=&quot;wholes1&quot; title=&quot;wholes1&quot; /&gt;
&lt;img src=&quot;/post_img/ABAQUS-WPBlade/0/wholeu1.png&quot; alt=&quot;wholeu1&quot; title=&quot;wholeu1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;款式一-裂纹页片&quot;&gt;[款式一] 裂纹页片&lt;/h3&gt;
&lt;h4 id=&quot;裂纹&quot;&gt;裂纹&lt;/h4&gt;

&lt;p&gt;裂纹直接画图产生，没有使用ＡＢＡＱＵＳ裂纹功能．（不会）
&lt;img src=&quot;/post_img/ABAQUS-WPBlade/1/hole.png&quot; alt=&quot;hole&quot; title=&quot;hole&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;结果&quot;&gt;结果&lt;/h4&gt;
&lt;p&gt;在款式一发生裂纹的页片处，应力集中于圆孔裂纹对面，应力值稍有下降，整体位移感觉没有巨大改变．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_img/ABAQUS-WPBlade/1/holes.png&quot; alt=&quot;holes&quot; title=&quot;holes&quot; /&gt;
&lt;img src=&quot;/post_img/ABAQUS-WPBlade/1/holeu.png&quot; alt=&quot;holeu&quot; title=&quot;holeu&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;款式二-去角页片&quot;&gt;[款式二] 去角页片&lt;/h3&gt;
&lt;p&gt;在款式二页片，直接将圆口去掉，消除了孔边应力集中，整体位移感觉没有什么改变．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_img/ABAQUS-WPBlade/2/wholes2.png&amp;quot;wholes2&amp;quot;&quot; alt=&quot;wholes2&quot; /&gt;
&lt;img src=&quot;/post_img/ABAQUS-WPBlade/2/wholeu2.png&quot; alt=&quot;wholeu2&quot; title=&quot;wholeu2&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;结论分析&quot;&gt;结论分析&lt;/h2&gt;
&lt;p&gt;对比以上三个结果，看到款式一设计上个人还是感觉存在一些不足，尤其是在页片塑料选材和制造上如果不行的话，由于应力集中和拆装时容易侧重一边，确实容易像我一样多次掰断页片．&lt;/p&gt;

&lt;p&gt;第二款页片，在节省了材料的同时，消除了应力集中．整体的位移没有什么变化，应该不会影响密封性能．（关于最终载荷和位移对密封的影响分析是否正确还有待考察）．&lt;/p&gt;

&lt;h2 id=&quot;ＥＮＤ&quot;&gt;ＥＮＤ&lt;/h2&gt;
&lt;p&gt;款式二刚到货，防水性能还有待测试．但是就目前来看，款式二的改进确实比款式一好多了．&lt;/p&gt;

</description>
        <pubDate>Wed, 25 Apr 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/abaqus/2018/04/25/three-blades-abaqus.html</link>
        <guid isPermaLink="true">http://localhost:4000/abaqus/2018/04/25/three-blades-abaqus.html</guid>
        
        
        <category>ABAQUS</category>
        
      </item>
    
      <item>
        <title>开挂玩微信跳一跳</title>
        <description>&lt;h1 id=&quot;开挂玩微信跳一跳&quot;&gt;开挂玩微信跳一跳&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Eacaen/wechat_jump_game&quot;&gt;程序地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/av18307956&quot;&gt;B站视频–&amp;gt;酸爽。跳一跳20倍播放从4000分到20000＋&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=18307956&amp;amp;cid=29885527&amp;amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;

&lt;p&gt;换了小米mix2后发现安卓真是各种权限开放。网上也有各种微信跳一跳的自动挂，尝试一下做个记录。&lt;/p&gt;

&lt;h2 id=&quot;获取安卓usb调试权限&quot;&gt;获取安卓USB调试权限&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;ubuntu 安装abd tool 调试安卓，需要有java8，如果和已有的java７冲突，可参考网上教程，教程亲测可用。&lt;/li&gt;
  &lt;li&gt;小米打开开发者模式，开启USB调试，开启允许模拟触屏。&lt;/li&gt;
  &lt;li&gt;shell 中打开adb device 可以发现设备，如果发现不了，网上教程亲测可用。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;手动模式&quot;&gt;手动模式&lt;/h2&gt;
&lt;p&gt;文件中手动模式，使用matplotlib库，将屏幕截图作为动画的部分，鼠标选择起跳和结束位置，乘上起跳系数后使用adb发送按压时间完成跳跃．&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;速度慢，依赖鼠标点击精度。&lt;/li&gt;
  &lt;li&gt;方法很好，直观且可以学习很多新的方法&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;自动模式&quot;&gt;自动模式&lt;/h2&gt;
&lt;h3 id=&quot;使用opencv&quot;&gt;使用OpenCV&lt;/h3&gt;
&lt;p&gt;进行图像处理，截图中心部分。高斯去噪后找到图像边缘，继而找出小人的中心和下一个跳板的中心。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;每次跳到中心后，会在下个位子中心显示白点，可以直接寻找，更加方便&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;使用tensorflow&quot;&gt;使用Tensorflow&lt;/h3&gt;
&lt;p&gt;使用了800–1000张图片,截取中心部分，灰度显示，利用卷积神经网络，使用 &lt;em&gt;使用OpenCV&lt;/em&gt; 找到的中心作为输入，按压时间作为训练结果。训练效果有些许，但是不好&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;学艺不精，参数调试，层数选择有待学习&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;debug&quot;&gt;DEBUG&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;对于不是正方形的跳板，目前只能放弃，但是不影响&lt;/li&gt;
  &lt;li&gt;深度学习并没有学习到我想象中效果，渣渣电脑和渣渣技术&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;又要多多学习一个了。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/wangshub/wechat_jump_game&quot;&gt;参考github@wangshub&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 08 Jan 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/python/2018/01/08/wechat_jump_game.html</link>
        <guid isPermaLink="true">http://localhost:4000/python/2018/01/08/wechat_jump_game.html</guid>
        
        
        <category>Python</category>
        
      </item>
    
      <item>
        <title>Ubuntu 14.04 install caffe</title>
        <description>&lt;h1 id=&quot;ubuntu-安装-caffe&quot;&gt;Ubuntu 安装 caffe&lt;/h1&gt;
&lt;p&gt;安装参考&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/u011762313/article/details/47262549&quot;&gt;Ubuntu14.04 安装Caffe（仅CPU）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/fairylrt/article/details/43560525&quot;&gt;Anaconda装OpenCV&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/wuzuyu365/article/details/52431062&quot;&gt;python caffe报错：No module named google.protobuf.internal&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 18 Dec 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/ubuntu/2017/12/18/install-caffe-opencv.html</link>
        <guid isPermaLink="true">http://localhost:4000/ubuntu/2017/12/18/install-caffe-opencv.html</guid>
        
        
        <category>Ubuntu</category>
        
      </item>
    
      <item>
        <title>BBB Notebook 6 IIC使用</title>
        <description>&lt;h1 id=&quot;beagleboard-black-笔记-6&quot;&gt;beagleboard black 笔记 &amp;lt;6&amp;gt;&lt;/h1&gt;
&lt;p&gt;我使用的是之前做小四轴剩下的 MPU6050 ，它和 HMC5883 焊在一起的，因为IIC 使用的是总线形式，所以不影响，反而可以测试一下多个传感器下的 IIC 功能。我先使用IIC读取 MPU6050 数据。&lt;/p&gt;

&lt;h1 id=&quot;开始使用-iic&quot;&gt;开始使用 IIC&lt;/h1&gt;

&lt;h2 id=&quot;开启-iic-传输&quot;&gt;开启 IIC 传输&lt;/h2&gt;
&lt;p&gt;与串口操作类似，添加覆盖层，【改变 IO 口属性】&lt;/p&gt;

&lt;h3 id=&quot;操作步骤&quot;&gt;操作步骤&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;root@beaglebone:/lib/firmware# echo BB-I2C1 &amp;gt; $SLOTS  &amp;amp;
[1] 1585

root@beaglebone:/lib/firmware# cd /sys/devices/platform/ocp/
root@beaglebone:/sys/devices/platform/ocp# config-pin -l P9.17
default gpio gpio_pu gpio_pd spi_cs i2c pwm pru_uart

root@beaglebone:/sys/devices/platform/ocp# cat ocp:P9_17_pinmux/state
default
root@beaglebone:/sys/devices/platform/ocp# config-pin P9.17 i2c
root@beaglebone:/sys/devices/platform/ocp# config-pin P9.18 i2c

root@beaglebone:/sys/devices/platform/ocp# cat ocp:P9_17_pinmux/state
i2c
root@beaglebone:/sys/devices/platform/ocp# cat ocp:P9_18_pinmux/state
i2c
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;使用-linux-i2c-工具测试-iic-连接&quot;&gt;使用 Linux I2C 工具，测试 IIC 连接&lt;/h2&gt;
&lt;h3 id=&quot;检测总线上连接设备的地址&quot;&gt;检测总线上连接设备的地址&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;i2cdetect -y -r 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/post_img/BBB-img/iic-findID.png&quot; alt=&quot;iic-findID&quot; title=&quot;iic-findID&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;检测mpu6050-地址&quot;&gt;检测MPU6050 地址&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;i2cget -y 1 0x68 0x75
0x68
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;设置mpu6050-电源管理值&quot;&gt;设置MPU6050 电源管理值&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;i2cset -y 1 0x68 0x6B 0x00　//电源管理，典型值：0x00(正常启用)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;读取mpu6050-数据&quot;&gt;读取MPU6050 数据&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/post_img/BBB-img/mpu-origindata.png&quot; alt=&quot;mpu-origindata&quot; title=&quot;mpu-origindata&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;c重新获取mpu6050欧拉角&quot;&gt;C++重新获取mpu6050欧拉角&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Eacaen/my-BBB-lib/tree/master/i2c-mpu6050&quot;&gt;获取mpu6050欧拉角&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;iic类-读取地址&quot;&gt;IIC类 读取地址&lt;/h2&gt;

&lt;h2 id=&quot;mpu6050类-读取寄存器值&quot;&gt;mpu6050类 读取寄存器值&lt;/h2&gt;

&lt;h2 id=&quot;使用四元数进行姿态解析&quot;&gt;使用四元数进行姿态解析&lt;/h2&gt;

&lt;p&gt;尚未加入诸如卡尔曼等类型的滤波函数。&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;linux-硬件驱动编程&quot;&gt;Linux 硬件驱动编程&lt;/h2&gt;

&lt;p&gt;使用i2c通信先配置地址，数据位，超时时间等等通信规则。
这里的ioctl函数就是用来配置这些参数的。
I2C_SLAVE：安全的配置，如果i2c已经配置过会返回失败。
 I2C_SLAVE_FORCE：总是成功，不管其他人有没有在使用，确定只有你使用这个i2c的时候使用。
同时ioctl还能使用I2C_TENBIT，I2C_PEC，I2C_TIMEOUT等参数。
这里只是配置i2c通信规则，还没有发送数据。
配置完成后，调用write,read函数可以接收发送数据。&lt;/p&gt;

&lt;p&gt;i2cget和i2cset，分别是对寄存器进行获取和写入。用法为i2cget -y 总线号 设备地址 寄存器地址 模式和i2cset -y 总线号 设备地址 寄存器地址 数值 模式。模式默认为b（byte）即读取8bit数据，i2cget可用模式有b/w/c，i2cset可用模式有b/w/c/i/s，其中w为word（16bit），i和s分别为I2C和SMBUS的block数据。&lt;/p&gt;
</description>
        <pubDate>Wed, 29 Nov 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/beagleboard-black/2017/11/29/BBB-note5-i2c1.html</link>
        <guid isPermaLink="true">http://localhost:4000/beagleboard-black/2017/11/29/BBB-note5-i2c1.html</guid>
        
        
        <category>beagleboard-black</category>
        
      </item>
    
      <item>
        <title>BBB Notebook ５ 串口使用</title>
        <description>&lt;h1 id=&quot;beagleboard-black-笔记-５&quot;&gt;beagleboard black 笔记 &amp;lt;５&amp;gt;&lt;/h1&gt;
&lt;p&gt;使用串口
&lt;a href=&quot;http://blog.csdn.net/wyt2013/article/details/16846027&quot;&gt;使用Beaglebone Black的串口UART&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;pc-端&quot;&gt;PC 端&lt;/h2&gt;
&lt;h3 id=&quot;使用usb-转串口&quot;&gt;使用USB 转串口&lt;/h3&gt;
&lt;p&gt;插入USB 转串口，查看电脑是否有pl2303 驱动，查看电脑串口名字&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lsmod |grep pl2303
dmesg | tail -f  
lsmod | grep usbserial
dmesg | grep ttyUSB0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;安装串口工具&quot;&gt;安装串口工具&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/gatieme/article/details/45310493&quot;&gt;Ubuntu安装配置串口通讯工具minicom&amp;amp;&amp;amp;cutecom&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装minicom完成后&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//回环测试
sudo minicom -b 9200 -o -D /dev/ttyUSB0 
sudo minicom -b 9200 -o -D /dev/ttyO0/1/2/4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果是键盘按下什么键，都会返回重复的【显示两次】。&lt;/p&gt;

&lt;h2 id=&quot;bbb开启串口&quot;&gt;BBB开启串口&lt;/h2&gt;
&lt;h3 id=&quot;进入目录查看串口的io口&quot;&gt;进入目录，查看串口的IO口&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;dtc -I dtb -O dts BB-UART1-00A0.dtbo &amp;gt; BB-UART1-00A0.dts
cat BB-UART1-00A0.dts //看到pin号
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;挂载device-tree来启动uart1&quot;&gt;挂载device tree来启动UART1&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;echo BB-UART1 &amp;gt; $SLOTS  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;改变波特率发送信息&quot;&gt;改变波特率，发送信息&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;stty -F /dev/ttyO1  9600
echo &quot;What a wonderful day&quot; &amp;gt; /dev/ttyO1  在配置完好的PC端就可以看到消息
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;注意改变io口的属性&quot;&gt;【注意】改变IO口的属性&lt;/h3&gt;
&lt;p&gt;一开始我以为，BBB的串口IO口属性是默认的，尝试了好多次都只能使用uart0，其他的都不行，后来想到这和pwm波的一样要配置属性。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/sys/devices/platform/ocp# config-pin -l P9.24
default gpio gpio_pu gpio_pd uart can i2c pru_uart pruin

/sys/devices/platform/ocp# config-pin -l P9.14　//与串口IO口不同
default gpio gpio_pu gpio_pd pwm

config-pin P9.24 uart
config-pin P9.26 uart　

cat ocp:P9_26_pinmux/state　//查看属性
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;uart0&quot;&gt;UART0&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;直接把串口转usb模块的TXD，RXD和地线连到对应的引脚上（如图所示），无需进行任何配置，立刻就能开始使用了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;uart0配置完波特率之后可以直接使用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_img/BBB-img/pinuart0.jpeg&quot; alt=&quot;uart0&quot; title=&quot;uart0&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Nov 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/beagleboard-black/2017/11/26/BBB-note5-uart1.html</link>
        <guid isPermaLink="true">http://localhost:4000/beagleboard-black/2017/11/26/BBB-note5-uart1.html</guid>
        
        
        <category>beagleboard-black</category>
        
      </item>
    
      <item>
        <title>BBB Notebook 4 eclipse 配置</title>
        <description>&lt;h1 id=&quot;beagleboard-black-笔记-4&quot;&gt;beagleboard black 笔记 &amp;lt;4&amp;gt;&lt;/h1&gt;
&lt;p&gt;如何进行 eclipse 环境的配置，远程调试&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/zy812248258/article/details/38342287&quot;&gt;ubuntu12.04下在Eclipse中搭建BeagleBoneBlack的开发环境——远程在线运行&amp;amp;调试&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;eclipse-安装&quot;&gt;eclipse 安装&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install eclipse
sudo apt-get install eclipse-cdt 　// c++ environment
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;eclipse-install-market&quot;&gt;eclipse install market&lt;/h2&gt;

&lt;h2 id=&quot;eclipse-install-remote-system&quot;&gt;eclipse install Remote System&lt;/h2&gt;

&lt;p&gt;安装 market  后直接搜索安装即可&lt;/p&gt;

&lt;h2 id=&quot;eclipse-start-a-project&quot;&gt;eclipse start a project&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;strat a c++ project&lt;/li&gt;
  &lt;li&gt;choose cross c++ , next until [cross  GCC Commend] , copy the [arm-linux-guneabihf-] and choose path [/usr/bin], then finish&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 14 Nov 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/beagleboard-black/2017/11/14/BBB-note4-eslipse.html</link>
        <guid isPermaLink="true">http://localhost:4000/beagleboard-black/2017/11/14/BBB-note4-eslipse.html</guid>
        
        
        <category>beagleboard-black</category>
        
      </item>
    
      <item>
        <title>BBB Notebook 3 PWM 实验</title>
        <description>&lt;h1 id=&quot;beagleboard-black-笔记-3&quot;&gt;beagleboard black 笔记 &amp;lt;3&amp;gt;&lt;/h1&gt;
&lt;p&gt;几个基于例程的实验，网络问题的解决&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;点亮板子上的灯，循环点亮，跑马灯效果。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;点亮外部的灯，IO口控制。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;基本的按键输入，简单的 Python 状态机。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过这几个实验可以基本的了解一下 BBB 的 IO 口功能，但是这样并不能让我们完全了解到 BBB 的优势 以及与 类似基本的诸如 51 或是 STM32 不同之处，例如目前始终不能使用的 PWM 波功能。那么接下来才是真正跳入 BBB 的坑的过程吧。&lt;/p&gt;

&lt;h2 id=&quot;使用ＰＷＭ波功能&quot;&gt;使用ＰＷＭ波功能&lt;/h2&gt;
&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_7880d3350102wz2b.html&quot;&gt;Beaglebone Black开启PWM功能&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.teachmemicro.com/beaglebone-black-pwm-ubuntu-device-tree/&quot;&gt;Beaglebone Black PWM on Ubuntu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/beagleboard/bb.org-overlays/&quot;&gt;beagleboard/bb.org-overlays&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;开始使用教程最多的-p9_14-pwm-io-口&quot;&gt;开始使用教程最多的 p9_14 pwm io 口&lt;/h2&gt;
&lt;p&gt;按照教程，发现在 /lib/firmware/　目录下面只有一个　am33xx_pwm.dtbo 的驱动文件，却没有其他的ＩＯ口驱动。
【这里就很明显的体现出了这种跑系统的板子和ＳＴＭ３２ 的区别，之前一直以为他俩差不多，没有仔细研究过设备树，覆盖层之类的概念。】&lt;/p&gt;

&lt;h3 id=&quot;编写一个覆盖层&quot;&gt;编写一个覆盖层&lt;/h3&gt;
&lt;p&gt;可以自己为ＩＯ口编写一个，但是为了尽快看到实验效果，我直接　git 了一个。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; git clone https://github.com/beagleboard/bb.org-overlays/tree/master/src/arm
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;进入目录编译移动驱动&quot;&gt;进入目录，编译，移动驱动。&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;dtc -O dtb -o BB-PWM1-00A0.dtbo -b 0 -@ BB-PWM1-00A0.dts

mv -i BB-PWM1-00A0.dtbo /lib/firmware
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;添加到-slots-里面去&quot;&gt;添加到 slots 里面去。&lt;/h3&gt;

 	echo am33xx_pwm &amp;gt; /sys/devices/platform/bone_capemgr/slots
&lt;pre&gt;&lt;code&gt;echo BB-PWM1 &amp;gt; /sys/devices/platform/bone_capemgr/slots
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;查看改变io口属性&quot;&gt;查看，改变IO口属性？&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd /sys/devices/platform/ocp
config-pin -l P9.14
config-pin P9.14 pwm
cat ocp:P9_14_pinmux/state　查看属性
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;另外备注：在将cape-universaln插入槽中（slots）后，在
root@beaglebone:/sys/devices/platform/ocp/ocp:P9_14_pinmux
中将P9_14设置为pwm模式（#config-pin P9.14 pwm）后，需要在
/sys/class/pwm/pwmchip2中echo 0 &amp;gt; export，
这里为什么是pwmchip2，因为pwmchip2的地址0x4830_2000对应的是PWM1，echo 0是开启EHRPWM1A，echo 1是开启EHRPWM1B。具体地址映射可参见AM335x参考手册memory map部分。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我在使用时发现如下情况，应该改为　pwm３　后成功使用，其中原因留待解决。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_img/BBB-img/pwm3img.png&quot; alt=&quot;pwm3img&quot; title=&quot;pwm3img&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;可以使用在文件夹路径&quot;&gt;可以使用，在文件夹路径&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;/sys/devices/platform/ocp/48302000.epwmss/48302200.pwm/pwm/pwmchip3/pwm0

或者

/sys/class/pwm/pwmchip3/pwm0

可以正常使用命令

 echo 500 &amp;gt; duty_cycle 
 echo 10000 &amp;gt; polarity 
 echo 1 &amp;gt; enable
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;操作PWM用到duty(duty_ns)、period(period_ns)、polarity、run共四个参数，其中period就是频率参数（周期时间），duty为占空比，polarity为使能标志（1为使能，0为禁用），run 是执行命令（1为运行，0为关闭），period和duty的参数单位为纳秒（ns），1s=1000ms=1000000us=1000000000ns，所以period最大的取值范围为0—1000000000，而duty则取值0—period值之间&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h6 id=&quot;部分参数改变了意义一样&quot;&gt;部分参数改变了，意义一样。&lt;/h6&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;网络问题的解决&quot;&gt;网络问题的解决&lt;/h2&gt;
&lt;p&gt;有时发现无法连接，打开网络设置发现提示系统与网络兼容，因为启用过锐捷【万恶】，解决方法：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /etc/NetworkManager
sudo mv NetworkManager.conf /home/[name]/
sudo NetworkManager //重启
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完毕后你会发现网络恢复，正常使用，不要用锐捷了就。&lt;/p&gt;

</description>
        <pubDate>Tue, 14 Nov 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/beagleboard-black/2017/11/14/BBB-note3.html</link>
        <guid isPermaLink="true">http://localhost:4000/beagleboard-black/2017/11/14/BBB-note3.html</guid>
        
        
        <category>beagleboard-black</category>
        
      </item>
    
      <item>
        <title>BBB Notebook 2 Ubuntu 联网 - 时钟同步 - 开启远程桌面</title>
        <description>&lt;h1 id=&quot;beagleboard-black-笔记-2&quot;&gt;beagleboard black 笔记 &amp;lt;2&amp;gt;&lt;/h1&gt;
&lt;p&gt;在 Windows10 和 Ubuntu14.04 下的 BBB 操作。在 Ubuntu14.04 下的网络共享。&lt;/p&gt;

&lt;h2 id=&quot;系统&quot;&gt;系统&lt;/h2&gt;

&lt;h3 id=&quot;win10&quot;&gt;Win10&lt;/h3&gt;

&lt;h4 id=&quot;start-page&quot;&gt;start page&lt;/h4&gt;
&lt;p&gt;在 win10 下面使用 USB 插入电脑，我们很容易的按照教程 192.168.7.2 就能进入开始页面，使用 Petty 进入命令行。&lt;/p&gt;

&lt;h4 id=&quot;win-网络共享&quot;&gt;win 网络共享&lt;/h4&gt;
&lt;p&gt;按照教程在网络设置中打开网络共享就能使用，但是学校的锐捷实在是阻止进步的阶梯，许多锐捷和 Mxxx 类似的软件都不能开多网卡了。&lt;/p&gt;

&lt;h3 id=&quot;ubuntu1404&quot;&gt;Ubuntu14.04&lt;/h3&gt;
&lt;h4 id=&quot;start-page-1&quot;&gt;start page&lt;/h4&gt;
&lt;p&gt;在 Ubuntu14.04 下面使用 USB 插入电脑，并不能如意的进入开始页面 192.168.6.2  。使用 &lt;strong&gt;ifconfig&lt;/strong&gt;  查看下。。。&lt;/p&gt;

&lt;h4 id=&quot;ubuntu-网络共享&quot;&gt;Ubuntu 网络共享&lt;/h4&gt;
&lt;p&gt;在 Ubuntu 下的锐捷仍然禁止使用多网卡【MMP】，但是通过安装 mentohust ，配置好后是可以的。具体方法网上很多。&lt;/p&gt;

&lt;p&gt;ubuntu 成功联网后参考
&lt;a href=&quot;http://blog.csdn.net/pkuyjxu/article/details/44617511&quot;&gt;Beaglebone black 与ubuntu 通过usb网络共享&lt;/a&gt; 可以实现网络分享。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Step 1, Configuring BBB as follow shows:
route add default gw 192.168.7.1
vim /etc/resolv.conf  and add &quot;nameserver 8.8.8.8&quot; at the end.
Step 2, Configuring Ubuntu PC as following shows:
sudo su
#【wlan0】 is my internet facing interface, 【eth1】 is the BeagleBone USB connection
iptables --table nat --append POSTROUTING --out-interface 【wlan0】 -j MASQUERADE
iptables --append FORWARD --in-interface 【eth1】 -j ACCEPT
echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward
Step 3,  Test the internet in BBB as bellow shows:
ping 8.8.8.8
ping www.baidu.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用该教程时，先在 Ubuntu 下 &lt;strong&gt;ifconfig&lt;/strong&gt; 查看下当前使用电脑的是哪个网卡，按照自己使用的网卡修改命令。&lt;/p&gt;

&lt;h2 id=&quot;时钟同步&quot;&gt;时钟同步&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/hahachenchen789/article/details/52326688&quot;&gt;beaglebone black 时间调整&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.首先要设置时区，板子默认的时区文件在/etc/localtime文件中，将其删除：rm /etc/localtime
2.查看系统数据库中有哪些时区可供选择，命令：ls /usr/share/zoneinfo/Asia/
3.选择上海，将上海时区链接到localtime，
命令：ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
4.同步时间：在debian下，命令为： ntpdate-debian
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;总是提示/etc/localtime文件已经存在&lt;/p&gt;

&lt;p&gt;用 ln -sf 覆盖掉。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;使用-vnc-显示器&quot;&gt;使用 VNC 显示器&lt;/h2&gt;
&lt;p&gt;从成本和硬件上考虑，外接一个显示器显得十分不方便，需要购买的器材有点多了。这时可以考虑使用 VNC 显示器，方便的是在　beagleboard black　的　debian 系统和 PC 的 Ubuntu 上都自带了相关的软件。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/qq_30897583/article/details/71195001&quot;&gt;通过ＶＮＣ远程接入BeagleBone Black桌面&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;bbb-上打开-vncserver&quot;&gt;BBB 上打开 vncserver&lt;/h3&gt;
&lt;p&gt;记住此时分配给的端口号&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_img/BBB-img/openvnc.png&quot; alt=&quot;vncserver&quot; title=&quot;vncserver&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;在-ubuntu-上配置remmina远程客户端&quot;&gt;在 Ubuntu 上配置Remmina远程客户端&lt;/h3&gt;
&lt;p&gt;配置时保证端口号一致，ssh高级设置可以选择性打开。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_img/BBB-img/vncPcset.png&quot; alt=&quot;vncPcset&quot; title=&quot;vncPcset&quot; /&gt;&lt;/p&gt;

&lt;p&gt;配置完成后即可进入。&lt;/p&gt;

&lt;h2 id=&quot;安装xfce４可选&quot;&gt;安装　Xfce４（可选）&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.douban.com/group/topic/42903996/&quot;&gt;install Xfce on Beaglebone Black &lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install xfce4
sudo apt-get install xfce-goodies 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成后重启，输入 startx or stearxfce4 启动，进入ＶＮＣ　即可看见界面。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_img/BBB-img/tablexf.png&quot; alt=&quot;tablexf&quot; title=&quot;tablexf&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;problems-collection&quot;&gt;PROBLEMS COLLECTION&lt;/h2&gt;
&lt;p&gt;有时不知道自己搞的哪里坏了，在 cloud9 里面无法烧写程序，而是不断弹出错误，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tmux: need UTF-8 locale (LC_CTYPE) but have ANSI_X3.4-1968
tmux: invalid LC_ALL, LC_CTYPE or LANG
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;应该是板子上的字符选择的错误，但是我没有找到什么好的方法，直接重装了系统。&lt;/p&gt;

&lt;h2 id=&quot;useful-resp&quot;&gt;useful resp&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/derekmolloy/exploringBB&quot;&gt;From book by Molloy&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;进入vnc桌面后有可能显示不全选择全屏才可以看见所有界面&quot;&gt;进入vnc桌面后有可能显示不全，选择全屏才可以看见所有界面&lt;/h1&gt;
&lt;p&gt;不要在这一步浪费太多时间&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Nov 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/beagleboard-black/2017/11/09/BBB-note2.html</link>
        <guid isPermaLink="true">http://localhost:4000/beagleboard-black/2017/11/09/BBB-note2.html</guid>
        
        
        <category>beagleboard-black</category>
        
      </item>
    
      <item>
        <title> Pygame ConwayLifegame</title>
        <description>&lt;h1 id=&quot;conway-lifegame&quot;&gt;Conway Lifegame&lt;/h1&gt;
&lt;p&gt;经典的康威生命游戏，目前我看到了有两种完全不同的方法可以实现：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用 Pygame 来实现&lt;/li&gt;
  &lt;li&gt;使用 matplotlib 实现&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过这两个方法各自的优点可以了解到两者不同的知识点。&lt;/p&gt;

&lt;h2 id=&quot;待续&quot;&gt;待续&lt;/h2&gt;
</description>
        <pubDate>Wed, 08 Nov 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/python/2017/11/08/pygame-ConwayLifegame.html</link>
        <guid isPermaLink="true">http://localhost:4000/python/2017/11/08/pygame-ConwayLifegame.html</guid>
        
        
        <category>Python</category>
        
      </item>
    
  </channel>
</rss>
